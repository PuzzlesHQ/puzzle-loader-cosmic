plugins {
    id 'java'
}

group = 'dev.puzzleshq'
version = '1.0-SNAPSHOT'

repositories {
    ivy {
        name "Cosmic Reach"
        url "https://github.com/PuzzlesHQ/CRArchive/releases/download"
        patternLayout {
            artifact "/[revision]/cosmic-reach-[classifier]-[revision].jar"
        }
        // This is required in Gradle 6.0+ as metadata file (ivy.xml) is mandatory
        metadataSources {
            artifact()
        }

        content {
            it.includeModule "finalforeach", "cosmic-reach"
        }
    }
    mavenCentral()
    mavenLocal()
}

sourceSets {
    client
    common
    server
}

configurations {
    allCompileOnly

    clientCompileOnly.extendsFrom(allCompileOnly)
    commonCompileOnly.extendsFrom(allCompileOnly)
    serverCompileOnly.extendsFrom(allCompileOnly)

    clientBundle
    commonBundle
    serverBundle

    clientImplementation.extendsFrom(clientBundle)
    commonImplementation.extendsFrom(commonBundle)
    serverImplementation.extendsFrom(serverBundle)

    clientInternal
    serverInternal

    clientImplementation.extendsFrom(clientInternal)
    serverImplementation.extendsFrom(serverInternal)
    serverImplementation.extendsFrom(commonBundle)

}

boolean usingSingleJar = false;
String version = "0.4.11-alpha"

var jar = files("./lib/Cosmic-Reach-0.4.10b.jar");

dependencies {

    clientCompileOnly "org.jetbrains:annotations:24.0.0"
    serverCompileOnly "org.jetbrains:annotations:24.0.0"
    commonCompileOnly "org.jetbrains:annotations:24.0.0"

    clientBundle "dev.puzzleshq:puzzle-loader-core:1.0.0:client"
    clientBundle "dev.puzzleshq:puzzle-loader-core:1.0.0:common"
    commonBundle "dev.puzzleshq:puzzle-loader-core:1.0.0:common"
    serverBundle "dev.puzzleshq:puzzle-loader-core:1.0.0:common"

    if (usingSingleJar) {
        clientImplementation(jar)
        commonImplementation(jar)
        serverImplementation(jar)
    } else {
        clientImplementation("finalforeach:cosmic-reach:$version:client")
        commonImplementation("finalforeach:cosmic-reach:$version:server")
        serverImplementation("finalforeach:cosmic-reach:$version:server")
    }

    clientImplementation(sourceSets.common.output)
    serverImplementation(sourceSets.common.output)

}

tasks.register("runClient", JavaExec) {
    classpath += sourceSets.client.runtimeClasspath
    classpath += sourceSets.common.runtimeClasspath

    mainClass = "dev.puzzleshq.puzzleloader.loader.launch.pieces.ClientPiece"
}

tasks.register("runServer", JavaExec) {
    classpath += sourceSets.server.runtimeClasspath
    classpath += sourceSets.common.runtimeClasspath

    mainClass = "dev.puzzleshq.puzzleloader.loader.launch.pieces.ServerPiece"
    workingDir(file("./run"))
}

wrapper {
    gradleVersion = "8.5"
    distributionType = Wrapper.DistributionType.ALL
}

java.toolchain.languageVersion.set(JavaLanguageVersion.of(24))